{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MF313PV\\\\OneDrive - EY\\\\Documents\\\\Fullstack\\\\frontend\\\\src\\\\component\\\\Cart.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const Cart = () => {\n//   const [cartItems, setCartItems] = useState([]);\n\n//   // Function to fetch cart items from the JSON server\n//   useEffect(() => {\n//     const fetchCartItems = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:8888/products');\n//         setCartItems(response.data);\n//       } catch (error) {\n//         console.error('Error fetching cart items:', error);\n//       }\n//     };\n\n//     fetchCartItems();\n//   }, []);\n\n//   // Function to remove a product from the cart\n//   const removeProduct = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:8888/products/${id}`);\n//       const updatedCart = cartItems.filter(item => item.id !== id);\n//       setCartItems(updatedCart);\n//     } catch (error) {\n//       console.error('Error removing product:', error);\n//     }\n//   };\n\n//   // Calculate total price\n//   const totalPrice = cartItems.reduce((acc, item) => acc + item.price, 0);\n\n//   return (\n//     <div className=\"cart\">\n//       {cartItems.map((item) => (\n//         <div key={item.id} className=\"cart-item\">\n//           <img src={item.imageurl} alt={item.name} style={{width:\"23%\",height:\"23%\"}} />\n//           <div className=\"cart-item-details\" style={{ color: \"white\" }}>\n//             <h3>Name:{item.name}</h3>\n//             <p>Description{item.description}</p>\n//             <p>Price: ${item.price}</p>\n\n//             <button onClick={() => removeProduct(item.id)}>Remove</button>\n//           </div>\n//         </div>\n//       ))}\n//       <div className=\"total-price\">\n//         Total Price: ${totalPrice}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Cart;\n// ===============================================================================================\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n\n// const Cart = () => {\n//   const [cartItems, setCartItems] = useState([]);\n//   const [quantities, setQuantities] = useState({});\n\n//   // Function to fetch cart items from the JSON server\n//   useEffect(() => {\n//     const fetchCartItems = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:8888/products');\n//         setCartItems(response.data);\n//       } catch (error) {\n//         console.error('Error fetching cart items:', error);\n//       }\n//     };\n\n//     fetchCartItems();\n//   }, []);\n\n//   // Function to remove a product from the cart\n//   const removeProduct = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:8888/products/${id}`);\n//       const updatedCart = cartItems.filter(item => item.id !== id);\n//       setCartItems(updatedCart);\n//     } catch (error) {\n//       console.error('Error removing product:', error);\n//     }\n//   };\n\n//   // Function to handle quantity change\n//   const handleQuantityChange = (id, quantity) => {\n//     setQuantities(prevState => ({\n//       ...prevState,\n//       [id]: quantity\n//     }));\n//   };\n\n//   // Function to calculate the subtotal for each item\n//   const calculateSubtotal = (item) => {\n//     const quantity = quantities[item.id] || 1;\n//     return item.price * quantity;\n//   };\n\n//   // Calculate total price including all subtotal prices\n//   const totalPrice = cartItems.reduce((acc, item) => {\n//     const subtotal = calculateSubtotal(item);\n//     return acc + subtotal;\n//   }, 0);\n\n//   return (\n//     <div className=\"cart\">\n//       {cartItems.map((item) => (\n//         <div key={item.id} className=\"cart-item\">\n//           <img src={item.imageurl} alt={item.name} style={{ width: \"23%\", height: \"23%\" }} />\n//           <div className=\"cart-item-details\" style={{ color: \"white\" }}>\n//             <h3>Name: {item.name}</h3>\n//             <p>Description: {item.description}</p>\n//             <p>Price: ${item.price}</p>\n//             <div style={{ display: \"flex\", alignItems: \"center\" }}>\n//               <p style={{ marginRight: \"10px\" }}>Quantity:</p>\n//               <select value={quantities[item.id] || 1} onChange={(e) => handleQuantityChange(item.id, parseInt(e.target.value))}>\n//                 {[...Array(10)].map((_, index) => (\n//                   <option key={index + 1} value={index + 1}>{index + 1}</option>\n//                 ))}\n//               </select>\n//             </div>\n//             <p>Subtotal: ${calculateSubtotal(item)}</p>\n//             <button onClick={() => removeProduct(item.id)}>Remove</button>\n//           </div>\n//         </div>\n//       ))}\n//       <div className=\"total-price\">\n//         Total Price: ${totalPrice.toFixed(2)}\n//       </div>\n//       <Link to=\"/form\">\n//         <button>Order</button>\n//       </Link>\n//     </div>\n//   );\n// };\n\n// export default Cart;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [quantities, setQuantities] = useState({});\n\n  // Function to fetch cart items from the JSON server\n  useEffect(() => {\n    const fetchCartItems = async () => {\n      try {\n        const response = await axios.get('http://localhost:8888/products');\n        setCartItems(response.data);\n      } catch (error) {\n        console.error('Error fetching cart items:', error);\n      }\n    };\n    fetchCartItems();\n  }, []);\n\n  // Function to remove a product from the cart\n  const removeProduct = async id => {\n    try {\n      await axios.delete(`http://localhost:8888/products/${id}`);\n      const updatedCart = cartItems.filter(item => item.id !== id);\n      setCartItems(updatedCart);\n    } catch (error) {\n      console.error('Error removing product:', error);\n    }\n  };\n\n  // Function to handle quantity change\n  const handleQuantityChange = (id, quantity) => {\n    setQuantities(prevState => ({\n      ...prevState,\n      [id]: quantity\n    }));\n  };\n\n  // Function to calculate the subtotal for each item\n  const calculateSubtotal = item => {\n    const quantity = quantities[item.id] || 1;\n    return item.price * quantity;\n  };\n\n  // Calculate total price including all subtotal prices\n  const totalPrice = cartItems.reduce((acc, item) => {\n    const subtotal = calculateSubtotal(item);\n    return acc + subtotal;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Subtotal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: cartItems.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: quantities[item.id] || 1,\n              onChange: e => handleQuantityChange(item.id, parseInt(e.target.value)),\n              children: [...Array(10)].map((_, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: index + 1,\n                children: index + 1\n              }, index + 1, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", calculateSubtotal(item)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeProduct(item.id),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"total-price\",\n      children: [\"Total Price: $\", totalPrice.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: {\n        pathname: \"/order\",\n        state: {\n          cartItems: cartItems.filter(item => quantities[item.id] > 0)\n        } // Pass only selected items as state\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(Cart, \"1o2Xm9zdgEUpL4kWaZLtbQzH7uc=\");\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","Cart","_s","cartItems","setCartItems","quantities","setQuantities","fetchCartItems","response","get","data","error","console","removeProduct","id","delete","updatedCart","filter","item","handleQuantityChange","quantity","prevState","calculateSubtotal","price","totalPrice","reduce","acc","subtotal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","name","value","onChange","e","parseInt","target","Array","_","index","onClick","toFixed","to","pathname","state","_c","$RefreshReg$"],"sources":["C:/Users/MF313PV/OneDrive - EY/Documents/Fullstack/frontend/src/component/Cart.js"],"sourcesContent":["\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n\r\n// const Cart = () => {\r\n//   const [cartItems, setCartItems] = useState([]);\r\n\r\n//   // Function to fetch cart items from the JSON server\r\n//   useEffect(() => {\r\n//     const fetchCartItems = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:8888/products');\r\n//         setCartItems(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching cart items:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchCartItems();\r\n//   }, []);\r\n\r\n//   // Function to remove a product from the cart\r\n//   const removeProduct = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:8888/products/${id}`);\r\n//       const updatedCart = cartItems.filter(item => item.id !== id);\r\n//       setCartItems(updatedCart);\r\n//     } catch (error) {\r\n//       console.error('Error removing product:', error);\r\n//     }\r\n//   };\r\n\r\n//   // Calculate total price\r\n//   const totalPrice = cartItems.reduce((acc, item) => acc + item.price, 0);\r\n\r\n//   return (\r\n//     <div className=\"cart\">\r\n//       {cartItems.map((item) => (\r\n//         <div key={item.id} className=\"cart-item\">\r\n//           <img src={item.imageurl} alt={item.name} style={{width:\"23%\",height:\"23%\"}} />\r\n//           <div className=\"cart-item-details\" style={{ color: \"white\" }}>\r\n//             <h3>Name:{item.name}</h3>\r\n//             <p>Description{item.description}</p>\r\n//             <p>Price: ${item.price}</p>\r\n            \r\n//             <button onClick={() => removeProduct(item.id)}>Remove</button>\r\n//           </div>\r\n//         </div>\r\n//       ))}\r\n//       <div className=\"total-price\">\r\n//         Total Price: ${totalPrice}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Cart;\r\n// ===============================================================================================\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// const Cart = () => {\r\n//   const [cartItems, setCartItems] = useState([]);\r\n//   const [quantities, setQuantities] = useState({});\r\n\r\n//   // Function to fetch cart items from the JSON server\r\n//   useEffect(() => {\r\n//     const fetchCartItems = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:8888/products');\r\n//         setCartItems(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching cart items:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchCartItems();\r\n//   }, []);\r\n\r\n//   // Function to remove a product from the cart\r\n//   const removeProduct = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:8888/products/${id}`);\r\n//       const updatedCart = cartItems.filter(item => item.id !== id);\r\n//       setCartItems(updatedCart);\r\n//     } catch (error) {\r\n//       console.error('Error removing product:', error);\r\n//     }\r\n//   };\r\n\r\n//   // Function to handle quantity change\r\n//   const handleQuantityChange = (id, quantity) => {\r\n//     setQuantities(prevState => ({\r\n//       ...prevState,\r\n//       [id]: quantity\r\n//     }));\r\n//   };\r\n\r\n//   // Function to calculate the subtotal for each item\r\n//   const calculateSubtotal = (item) => {\r\n//     const quantity = quantities[item.id] || 1;\r\n//     return item.price * quantity;\r\n//   };\r\n\r\n//   // Calculate total price including all subtotal prices\r\n//   const totalPrice = cartItems.reduce((acc, item) => {\r\n//     const subtotal = calculateSubtotal(item);\r\n//     return acc + subtotal;\r\n//   }, 0);\r\n\r\n//   return (\r\n//     <div className=\"cart\">\r\n//       {cartItems.map((item) => (\r\n//         <div key={item.id} className=\"cart-item\">\r\n//           <img src={item.imageurl} alt={item.name} style={{ width: \"23%\", height: \"23%\" }} />\r\n//           <div className=\"cart-item-details\" style={{ color: \"white\" }}>\r\n//             <h3>Name: {item.name}</h3>\r\n//             <p>Description: {item.description}</p>\r\n//             <p>Price: ${item.price}</p>\r\n//             <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n//               <p style={{ marginRight: \"10px\" }}>Quantity:</p>\r\n//               <select value={quantities[item.id] || 1} onChange={(e) => handleQuantityChange(item.id, parseInt(e.target.value))}>\r\n//                 {[...Array(10)].map((_, index) => (\r\n//                   <option key={index + 1} value={index + 1}>{index + 1}</option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//             <p>Subtotal: ${calculateSubtotal(item)}</p>\r\n//             <button onClick={() => removeProduct(item.id)}>Remove</button>\r\n//           </div>\r\n//         </div>\r\n//       ))}\r\n//       <div className=\"total-price\">\r\n//         Total Price: ${totalPrice.toFixed(2)}\r\n//       </div>\r\n//       <Link to=\"/form\">\r\n//         <button>Order</button>\r\n//       </Link>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Cart;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Cart = () => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [quantities, setQuantities] = useState({});\r\n\r\n  // Function to fetch cart items from the JSON server\r\n  useEffect(() => {\r\n    const fetchCartItems = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8888/products');\r\n        setCartItems(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching cart items:', error);\r\n      }\r\n    };\r\n\r\n    fetchCartItems();\r\n  }, []);\r\n\r\n  // Function to remove a product from the cart\r\n  const removeProduct = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:8888/products/${id}`);\r\n      const updatedCart = cartItems.filter(item => item.id !== id);\r\n      setCartItems(updatedCart);\r\n    } catch (error) {\r\n      console.error('Error removing product:', error);\r\n    }\r\n  };\r\n\r\n  // Function to handle quantity change\r\n  const handleQuantityChange = (id, quantity) => {\r\n    setQuantities(prevState => ({\r\n      ...prevState,\r\n      [id]: quantity\r\n    }));\r\n  };\r\n\r\n  // Function to calculate the subtotal for each item\r\n  const calculateSubtotal = (item) => {\r\n    const quantity = quantities[item.id] || 1;\r\n    return item.price * quantity;\r\n  };\r\n\r\n  // Calculate total price including all subtotal prices\r\n  const totalPrice = cartItems.reduce((acc, item) => {\r\n    const subtotal = calculateSubtotal(item);\r\n    return acc + subtotal;\r\n  }, 0);\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Product</th>\r\n            <th>Price</th>\r\n            <th>Quantity</th>\r\n            <th>Subtotal</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {cartItems.map((item) => (\r\n            <tr key={item.id}>\r\n              <td>{item.name}</td>\r\n              <td>${item.price}</td>\r\n              <td>\r\n                <select value={quantities[item.id] || 1} onChange={(e) => handleQuantityChange(item.id, parseInt(e.target.value))}>\r\n                  {[...Array(10)].map((_, index) => (\r\n                    <option key={index + 1} value={index + 1}>{index + 1}</option>\r\n                  ))}\r\n                </select>\r\n              </td>\r\n              <td>${calculateSubtotal(item)}</td>\r\n              <td><button onClick={() => removeProduct(item.id)}>Remove</button></td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"total-price\">\r\n        Total Price: ${totalPrice.toFixed(2)}\r\n      </div>\r\n      <Link to={{\r\n        pathname: \"/order\",\r\n        state: { cartItems: cartItems.filter(item => quantities[item.id] > 0) } // Pass only selected items as state\r\n      }}>\r\n        <button>Order</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"],"mappings":";;AAEA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,gCAAgC,CAAC;QAClEL,YAAY,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,E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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}