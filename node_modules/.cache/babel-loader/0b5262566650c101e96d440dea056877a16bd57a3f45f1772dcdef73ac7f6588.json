{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MF313PV\\\\OneDrive - EY\\\\Documents\\\\Fullstack\\\\frontend\\\\src\\\\component\\\\Cart.js\";\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const Cart = () => {\n//   const [cartItems, setCartItems] = useState([]);\n\n//   // Function to fetch cart items from the JSON server\n//   useEffect(() => {\n//     const fetchCartItems = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:8888/products');\n//         setCartItems(response.data);\n//       } catch (error) {\n//         console.error('Error fetching cart items:', error);\n//       }\n//     };\n\n//     fetchCartItems();\n//   }, []);\n\n//   // Function to remove a product from the cart\n//   const removeProduct = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:8888/products/${id}`);\n//       const updatedCart = cartItems.filter(item => item.id !== id);\n//       setCartItems(updatedCart);\n//     } catch (error) {\n//       console.error('Error removing product:', error);\n//     }\n//   };\n\n//   // Calculate total price\n//   const totalPrice = cartItems.reduce((acc, item) => acc + item.price, 0);\n\n//   return (\n//     <div className=\"cart\">\n//       {cartItems.map((item) => (\n//         <div key={item.id} className=\"cart-item\">\n//           <img src={item.imageurl} alt={item.name} style={{width:\"23%\",height:\"23%\"}} />\n//           <div className=\"cart-item-details\" style={{ color: \"white\" }}>\n//             <h3>Name:{item.name}</h3>\n//             <p>Description{item.description}</p>\n//             <p>Price: ${item.price}</p>\n\n//             <button onClick={() => removeProduct(item.id)}>Remove</button>\n//           </div>\n//         </div>\n//       ))}\n//       <div className=\"total-price\">\n//         Total Price: ${totalPrice}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Cart;\n// ===============================================================================================\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n\n// const Cart = () => {\n//   const [cartItems, setCartItems] = useState([]);\n//   const [quantities, setQuantities] = useState({});\n\n//   // Function to fetch cart items from the JSON server\n//   useEffect(() => {\n//     const fetchCartItems = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:8888/products');\n//         setCartItems(response.data);\n//       } catch (error) {\n//         console.error('Error fetching cart items:', error);\n//       }\n//     };\n\n//     fetchCartItems();\n//   }, []);\n\n//   // Function to remove a product from the cart\n//   const removeProduct = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:8888/products/${id}`);\n//       const updatedCart = cartItems.filter(item => item.id !== id);\n//       setCartItems(updatedCart);\n//     } catch (error) {\n//       console.error('Error removing product:', error);\n//     }\n//   };\n\n//   // Function to handle quantity change\n//   const handleQuantityChange = (id, quantity) => {\n//     setQuantities(prevState => ({\n//       ...prevState,\n//       [id]: quantity\n//     }));\n//   };\n\n//   // Function to calculate the subtotal for each item\n//   const calculateSubtotal = (item) => {\n//     const quantity = quantities[item.id] || 1;\n//     return item.price * quantity;\n//   };\n\n//   // Calculate total price including all subtotal prices\n//   const totalPrice = cartItems.reduce((acc, item) => {\n//     const subtotal = calculateSubtotal(item);\n//     return acc + subtotal;\n//   }, 0);\n\n//   return (\n//     <div className=\"cart\">\n//       {cartItems.map((item) => (\n//         <div key={item.id} className=\"cart-item\">\n//           <img src={item.imageurl} alt={item.name} style={{ width: \"23%\", height: \"23%\" }} />\n//           <div className=\"cart-item-details\" style={{ color: \"white\" }}>\n//             <h3>Name: {item.name}</h3>\n//             <p>Description: {item.description}</p>\n//             <p>Price: ${item.price}</p>\n//             <div style={{ display: \"flex\", alignItems: \"center\" }}>\n//               <p style={{ marginRight: \"10px\" }}>Quantity:</p>\n//               <select value={quantities[item.id] || 1} onChange={(e) => handleQuantityChange(item.id, parseInt(e.target.value))}>\n//                 {[...Array(10)].map((_, index) => (\n//                   <option key={index + 1} value={index + 1}>{index + 1}</option>\n//                 ))}\n//               </select>\n//             </div>\n//             <p>Subtotal: ${calculateSubtotal(item)}</p>\n//             <button onClick={() => removeProduct(item.id)}>Remove</button>\n//           </div>\n//         </div>\n//       ))}\n//       <div className=\"total-price\">\n//         Total Price: ${totalPrice.toFixed(2)}\n//       </div>\n//       <Link to=\"/form\">\n//         <button>Order</button>\n//       </Link>\n//     </div>\n//   );\n// };\n\n// export default Cart;\n// Cart.js\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = ({\n  cartItems\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart\",\n    children: [cartItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.imageurl,\n        alt: item.name,\n        style: {\n          width: \"23%\",\n          height: \"23%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-item-details\",\n        style: {\n          color: \"white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Name: \", item.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", item.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: $\", item.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"total-price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: {\n        pathname: \"/form\",\n        state: {\n          cartItems: cartItems\n        } // Pass cartItems as state\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","Cart","cartItems","className","children","map","item","src","imageurl","alt","name","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","color","description","price","id","to","pathname","state","_c","$RefreshReg$"],"sources":["C:/Users/MF313PV/OneDrive - EY/Documents/Fullstack/frontend/src/component/Cart.js"],"sourcesContent":["\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n\r\n// const Cart = () => {\r\n//   const [cartItems, setCartItems] = useState([]);\r\n\r\n//   // Function to fetch cart items from the JSON server\r\n//   useEffect(() => {\r\n//     const fetchCartItems = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:8888/products');\r\n//         setCartItems(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching cart items:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchCartItems();\r\n//   }, []);\r\n\r\n//   // Function to remove a product from the cart\r\n//   const removeProduct = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:8888/products/${id}`);\r\n//       const updatedCart = cartItems.filter(item => item.id !== id);\r\n//       setCartItems(updatedCart);\r\n//     } catch (error) {\r\n//       console.error('Error removing product:', error);\r\n//     }\r\n//   };\r\n\r\n//   // Calculate total price\r\n//   const totalPrice = cartItems.reduce((acc, item) => acc + item.price, 0);\r\n\r\n//   return (\r\n//     <div className=\"cart\">\r\n//       {cartItems.map((item) => (\r\n//         <div key={item.id} className=\"cart-item\">\r\n//           <img src={item.imageurl} alt={item.name} style={{width:\"23%\",height:\"23%\"}} />\r\n//           <div className=\"cart-item-details\" style={{ color: \"white\" }}>\r\n//             <h3>Name:{item.name}</h3>\r\n//             <p>Description{item.description}</p>\r\n//             <p>Price: ${item.price}</p>\r\n            \r\n//             <button onClick={() => removeProduct(item.id)}>Remove</button>\r\n//           </div>\r\n//         </div>\r\n//       ))}\r\n//       <div className=\"total-price\">\r\n//         Total Price: ${totalPrice}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Cart;\r\n// ===============================================================================================\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// const Cart = () => {\r\n//   const [cartItems, setCartItems] = useState([]);\r\n//   const [quantities, setQuantities] = useState({});\r\n\r\n//   // Function to fetch cart items from the JSON server\r\n//   useEffect(() => {\r\n//     const fetchCartItems = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:8888/products');\r\n//         setCartItems(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching cart items:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchCartItems();\r\n//   }, []);\r\n\r\n//   // Function to remove a product from the cart\r\n//   const removeProduct = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:8888/products/${id}`);\r\n//       const updatedCart = cartItems.filter(item => item.id !== id);\r\n//       setCartItems(updatedCart);\r\n//     } catch (error) {\r\n//       console.error('Error removing product:', error);\r\n//     }\r\n//   };\r\n\r\n//   // Function to handle quantity change\r\n//   const handleQuantityChange = (id, quantity) => {\r\n//     setQuantities(prevState => ({\r\n//       ...prevState,\r\n//       [id]: quantity\r\n//     }));\r\n//   };\r\n\r\n//   // Function to calculate the subtotal for each item\r\n//   const calculateSubtotal = (item) => {\r\n//     const quantity = quantities[item.id] || 1;\r\n//     return item.price * quantity;\r\n//   };\r\n\r\n//   // Calculate total price including all subtotal prices\r\n//   const totalPrice = cartItems.reduce((acc, item) => {\r\n//     const subtotal = calculateSubtotal(item);\r\n//     return acc + subtotal;\r\n//   }, 0);\r\n\r\n//   return (\r\n//     <div className=\"cart\">\r\n//       {cartItems.map((item) => (\r\n//         <div key={item.id} className=\"cart-item\">\r\n//           <img src={item.imageurl} alt={item.name} style={{ width: \"23%\", height: \"23%\" }} />\r\n//           <div className=\"cart-item-details\" style={{ color: \"white\" }}>\r\n//             <h3>Name: {item.name}</h3>\r\n//             <p>Description: {item.description}</p>\r\n//             <p>Price: ${item.price}</p>\r\n//             <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n//               <p style={{ marginRight: \"10px\" }}>Quantity:</p>\r\n//               <select value={quantities[item.id] || 1} onChange={(e) => handleQuantityChange(item.id, parseInt(e.target.value))}>\r\n//                 {[...Array(10)].map((_, index) => (\r\n//                   <option key={index + 1} value={index + 1}>{index + 1}</option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//             <p>Subtotal: ${calculateSubtotal(item)}</p>\r\n//             <button onClick={() => removeProduct(item.id)}>Remove</button>\r\n//           </div>\r\n//         </div>\r\n//       ))}\r\n//       <div className=\"total-price\">\r\n//         Total Price: ${totalPrice.toFixed(2)}\r\n//       </div>\r\n//       <Link to=\"/form\">\r\n//         <button>Order</button>\r\n//       </Link>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Cart;\r\n// Cart.js\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Cart = ({ cartItems }) => {\r\n  return (\r\n    <div className=\"cart\">\r\n      {cartItems.map((item) => (\r\n        <div key={item.id} className=\"cart-item\">\r\n          <img src={item.imageurl} alt={item.name} style={{ width: \"23%\", height: \"23%\" }} />\r\n          <div className=\"cart-item-details\" style={{ color: \"white\" }}>\r\n            <h3>Name: {item.name}</h3>\r\n            <p>Description: {item.description}</p>\r\n            <p>Price: ${item.price}</p>\r\n            {/* Add quantity handling if needed */}\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <div className=\"total-price\">\r\n        {/* Calculate total price if needed */}\r\n      </div>\r\n      <Link to={{\r\n        pathname: \"/form\",\r\n        state: { cartItems: cartItems } // Pass cartItems as state\r\n      }}>\r\n        <button>Order</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"],"mappings":";AAEA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAC9B,oBACEF,OAAA;IAAKG,SAAS,EAAC,MAAM;IAAAC,QAAA,GAClBF,SAAS,CAACG,GAAG,CAAEC,IAAI,iBAClBN,OAAA;MAAmBG,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtCJ,OAAA;QAAKO,GAAG,EAAED,IAAI,CAACE,QAAS;QAACC,GAAG,EAAEH,IAAI,CAACI,IAAK;QAACC,KAAK,EAAE;UAAEC,KAAK,EAAE,KAAK;UAAEC,MAAM,EAAE;QAAM;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnFjB,OAAA;QAAKG,SAAS,EAAC,mBAAmB;QAACQ,KAAK,EAAE;UAAEO,KAAK,EAAE;QAAQ,CAAE;QAAAd,QAAA,gBAC3DJ,OAAA;UAAAI,QAAA,GAAI,QAAM,EAACE,IAAI,CAACI,IAAI;QAAA;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1BjB,OAAA;UAAAI,QAAA,GAAG,eAAa,EAACE,IAAI,CAACa,WAAW;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtCjB,OAAA;UAAAI,QAAA,GAAG,UAAQ,EAACE,IAAI,CAACc,KAAK;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAExB,CAAC;IAAA,GAPEX,IAAI,CAACe,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQZ,CACN,CAAC,eACFjB,OAAA;MAAKG,SAAS,EAAC;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEvB,CAAC,eACNjB,OAAA,CAACF,IAAI;MAACwB,EAAE,EAAE;QACRC,QAAQ,EAAE,OAAO;QACjBC,KAAK,EAAE;UAAEtB,SAAS,EAAEA;QAAU,CAAC,CAAC;MAClC,CAAE;MAAAE,QAAA,eACAJ,OAAA;QAAAI,QAAA,EAAQ;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACQ,EAAA,GAzBIxB,IAAI;AA2BV,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}