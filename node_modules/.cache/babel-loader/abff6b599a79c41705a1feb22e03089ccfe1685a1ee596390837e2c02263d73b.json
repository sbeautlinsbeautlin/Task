{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MF313PV\\\\OneDrive - EY\\\\Documents\\\\Fullstack\\\\frontend\\\\src\\\\component\\\\Cart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// CartButton component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartButton = ({\n  onClick,\n  itemId\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => onClick(itemId),\n    children: \"Add to Cart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n// ImageDescription component\n_c = CartButton;\nconst ImageDescription = ({\n  description\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n// Main App component\n_c2 = ImageDescription;\nconst App = () => {\n  _s();\n  // State to manage the description\n  const [imageDescription, setImageDescription] = useState('');\n\n  // Function to handle the click event\n  const handleCartButtonClick = itemId => {\n    // Here you can fetch the image description based on the item ID clicked\n    // For this example, I'm just setting a hardcoded description\n    const description = \"This is the description of item with ID: \" + itemId;\n    setImageDescription(description);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CartButton, {\n      onClick: handleCartButtonClick,\n      itemId: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), imageDescription && /*#__PURE__*/_jsxDEV(ImageDescription, {\n      description: imageDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Cf08wKR0OAhbn2z1j3dRYy+2jSY=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CartButton\");\n$RefreshReg$(_c2, \"ImageDescription\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CartButton","onClick","itemId","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ImageDescription","description","_c2","App","_s","imageDescription","setImageDescription","handleCartButtonClick","_c3","$RefreshReg$"],"sources":["C:/Users/MF313PV/OneDrive - EY/Documents/Fullstack/frontend/src/component/Cart.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// CartButton component\r\nconst CartButton = ({ onClick, itemId }) => {\r\n  return (\r\n    <button onClick={() => onClick(itemId)}>Add to Cart</button>\r\n  );\r\n};\r\n\r\n// ImageDescription component\r\nconst ImageDescription = ({ description }) => {\r\n  return (\r\n    <div>{description}</div>\r\n  );\r\n};\r\n\r\n// Main App component\r\nconst App = () => {\r\n  // State to manage the description\r\n  const [imageDescription, setImageDescription] = useState('');\r\n\r\n  // Function to handle the click event\r\n  const handleCartButtonClick = (itemId) => {\r\n    // Here you can fetch the image description based on the item ID clicked\r\n    // For this example, I'm just setting a hardcoded description\r\n    const description = \"This is the description of item with ID: \" + itemId;\r\n    setImageDescription(description);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Product Page</h1>\r\n      {/* Render the CartButton component and pass the click handler */}\r\n      <CartButton onClick={handleCartButtonClick} itemId={1} />\r\n      {/* Render the ImageDescription component and pass the description */}\r\n      {imageDescription && <ImageDescription description={imageDescription} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EAC1C,oBACEH,OAAA;IAAQE,OAAO,EAAEA,CAAA,KAAMA,OAAO,CAACC,MAAM,CAAE;IAAAC,QAAA,EAAC;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEhE,CAAC;;AAED;AAAAC,EAAA,GANMR,UAAU;AAOhB,MAAMS,gBAAgB,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAC5C,oBACEX,OAAA;IAAAI,QAAA,EAAMO;EAAW;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAE5B,CAAC;;AAED;AAAAI,GAAA,GANMF,gBAAgB;AAOtB,MAAMG,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAE5D;EACA,MAAMmB,qBAAqB,GAAId,MAAM,IAAK;IACxC;IACA;IACA,MAAMQ,WAAW,GAAG,2CAA2C,GAAGR,MAAM;IACxEa,mBAAmB,CAACL,WAAW,CAAC;EAClC,CAAC;EAED,oBACEX,OAAA;IAAAI,QAAA,gBACEJ,OAAA;MAAAI,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErBR,OAAA,CAACC,UAAU;MAACC,OAAO,EAAEe,qBAAsB;MAACd,MAAM,EAAE;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAExDO,gBAAgB,iBAAIf,OAAA,CAACU,gBAAgB;MAACC,WAAW,EAAEI;IAAiB;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEV,CAAC;AAACM,EAAA,CArBID,GAAG;AAAAK,GAAA,GAAHL,GAAG;AAuBT,eAAeA,GAAG;AAAC,IAAAJ,EAAA,EAAAG,GAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAP,GAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}